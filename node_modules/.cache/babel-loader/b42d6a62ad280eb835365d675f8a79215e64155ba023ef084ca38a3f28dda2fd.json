{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32331\\\\wuziqi\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const size = 15; // 五子棋棋盘大小\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  // 生成棋盘行\n  const boardRows = [];\n  for (let row = 0; row < size; row++) {\n    const boardCols = [];\n    for (let col = 0; col < size; col++) {\n      const index = row * size + col;\n      boardCols.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[index],\n        onSquareClick: () => handleClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this));\n    }\n    boardRows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: boardCols\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), boardRows]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(225).fill(null)]); // 15x15棋盘\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"ZVnBbFpY40QFsJgQhoJetEB8Org=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const size = 15; // 棋盘大小\n  const directions = [{\n    x: 1,\n    y: 0\n  },\n  // 横向\n  {\n    x: 0,\n    y: 1\n  },\n  // 纵向\n  {\n    x: 1,\n    y: 1\n  },\n  // 斜向 (右下)\n  {\n    x: 1,\n    y: -1\n  } // 斜向 (右上)\n  ];\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      const currentPlayer = squares[row * size + col];\n      if (currentPlayer) {\n        for (let {\n          x,\n          y\n        } of directions) {\n          let count = 1;\n          let r = row + y;\n          let c = col + x;\n          while (r >= 0 && r < size && c >= 0 && c < size && squares[r * size + c] === currentPlayer) {\n            count++;\n            if (count === 5) return currentPlayer; // 找到5个连成一线的棋子\n            r += y;\n            c += x;\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","size","handleClick","i","calculateWinner","nextSquares","slice","winner","status","boardRows","row","boardCols","col","index","push","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","_c3","directions","x","y","currentPlayer","count","r","c","$RefreshReg$"],"sources":["C:/Users/32331/wuziqi/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const size = 15; // 五子棋棋盘大小\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  // 生成棋盘行\n  const boardRows = [];\n  for (let row = 0; row < size; row++) {\n    const boardCols = [];\n    for (let col = 0; col < size; col++) {\n      const index = row * size + col;\n      boardCols.push(\n        <Square\n          key={index}\n          value={squares[index]}\n          onSquareClick={() => handleClick(index)}\n        />\n      );\n    }\n    boardRows.push(\n      <div key={row} className=\"board-row\">\n        {boardCols}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {boardRows}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(225).fill(null)]); // 15x15棋盘\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const size = 15; // 棋盘大小\n  const directions = [\n    { x: 1, y: 0 }, // 横向\n    { x: 0, y: 1 }, // 纵向\n    { x: 1, y: 1 }, // 斜向 (右下)\n    { x: 1, y: -1 }, // 斜向 (右上)\n  ];\n\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      const currentPlayer = squares[row * size + col];\n      if (currentPlayer) {\n        for (let { x, y } of directions) {\n          let count = 1;\n          let r = row + y;\n          let c = col + x;\n          while (r >= 0 && r < size && c >= 0 && c < size && squares[r * size + c] === currentPlayer) {\n            count++;\n            if (count === 5) return currentPlayer; // 找到5个连成一线的棋子\n            r += y;\n            c += x;\n          }\n        }\n      }\n    }\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}